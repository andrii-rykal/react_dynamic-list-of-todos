{"version":3,"sources":["api.ts","types/Filter.ts","management/reducer.tsx","management/TodoContextProvider.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Filter","reducer","state","action","type","currentUser","payload","todos","currentTodo","item","isEyeSlash","slash","filterBy","query","initialState","all","StateContext","React","createContext","DispatchContext","TodoContextProvider","children","useReducer","dispatch","useEffect","todosFromServer","Provider","value","TodoList","useContext","className","filterTodos","filter","todo","title","toLowerCase","includes","active","completed","filteredTodos","map","cn","id","onClick","hendleClickEye","TodoFilter","onChange","e","target","placeholder","style","pointerEvents","Loader","TodoModal","userId","userFromServer","href","email","name","App","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85d6c109.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nconst BASE_URL\n  = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum Filter {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import { State } from '../types/State';\nimport { Todo } from '../types/Todo';\nimport { User } from '../types/User';\n\nexport type Action =\n  { type: 'getTodos', payload: Todo[] }\n  | { type: 'clickEye', item: Todo, slash: boolean }\n  | { type: 'closedModal' }\n  | { type: 'getUser', payload: User }\n  | { type: 'search', payload: string }\n  | { type: 'deletedSearch' }\n  | { type: 'filter', payload: string };\n\nexport function reducer(state: State, action: Action) {\n  switch (action.type) {\n    case 'getUser':\n      return {\n        ...state,\n        currentUser: action.payload,\n      };\n\n    case 'getTodos':\n      return {\n        ...state,\n        todos: action.payload,\n      };\n\n    case 'clickEye':\n      return {\n        ...state,\n        currentTodo: action.item,\n        isEyeSlash: action.slash,\n      };\n\n    case 'closedModal':\n      return {\n        ...state,\n        currentTodo: null,\n        currentUser: null,\n        isEyeSlash: false,\n      };\n\n    case 'filter':\n      return {\n        ...state,\n        filterBy: action.payload,\n      };\n\n    case 'search':\n      return {\n        ...state,\n        query: action.payload,\n      };\n\n    case 'deletedSearch':\n      return {\n        ...state,\n        query: '',\n      };\n\n    default:\n      return state;\n  }\n}\n","import React, { useEffect, useReducer } from 'react';\nimport { getTodos } from '../api';\nimport { Filter } from '../types/Filter';\nimport { State } from '../types/State';\nimport { Action, reducer } from './reducer';\n\nconst initialState: State = {\n  todos: [],\n  currentTodo: null,\n  currentUser: null,\n  isEyeSlash: false,\n  filterBy: Filter.all,\n  query: '',\n};\n\nexport const StateContext = React.createContext(initialState);\nexport const DispatchContext\n  = React.createContext<React.Dispatch<Action>>(() => {});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const TodoContextProvider: React.FC<Props> = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    getTodos().then(todosFromServer => {\n      dispatch({ type: 'getTodos', payload: todosFromServer });\n    });\n  }, []);\n\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      <StateContext.Provider value={state}>\n        {children}\n      </StateContext.Provider>\n    </DispatchContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport cn from 'classnames';\n\nimport {\n  DispatchContext,\n  StateContext,\n} from '../../management/TodoContextProvider';\nimport { Todo } from '../../types/Todo';\nimport { Filter } from '../../types/Filter';\n\nexport const TodoList: React.FC = () => {\n  const {\n    todos,\n    currentTodo,\n    filterBy,\n    query,\n  } = useContext(StateContext);\n  const dispatch = useContext(DispatchContext);\n\n  const hendleClickEye = (todo: Todo) => {\n    dispatch({\n      type: 'clickEye',\n      item: todo,\n      slash: true,\n    });\n  };\n\n  const filteredTodos = () => {\n    let filterTodos = todos;\n\n    if (query) {\n      filterTodos = filterTodos\n        .filter(todo => todo.title.toLowerCase()\n          .includes(query.toLowerCase()));\n    }\n\n    switch (filterBy) {\n      case Filter.active:\n        return filterTodos.filter(todo => !todo.completed);\n\n      case Filter.completed:\n        return filterTodos.filter(todo => todo.completed);\n\n      default:\n        return filterTodos;\n    }\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filteredTodos().map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={cn({\n              'has-background-info-light': currentTodo?.id === todo.id,\n            })}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => hendleClickEye(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={cn({\n                    'far fa-eye-slash': currentTodo?.id === todo.id,\n                    'far fa-eye': currentTodo?.id !== todo.id,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useContext } from 'react';\nimport {\n  DispatchContext,\n  StateContext,\n} from '../../management/TodoContextProvider';\n\nexport const TodoFilter = () => {\n  const { query } = useContext(StateContext);\n  const dispatch = useContext(DispatchContext);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => {\n              dispatch({ type: 'filter', payload: e.target.value });\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => {\n            dispatch({ type: 'search', payload: e.target.value });\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                dispatch({ type: 'deletedSearch' });\n              }}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useContext, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport {\n  DispatchContext,\n  StateContext,\n} from '../../management/TodoContextProvider';\nimport { getUser } from '../../api';\n\nexport const TodoModal: React.FC = () => {\n  const { currentTodo, currentUser } = useContext(StateContext);\n  const dispatch = useContext(DispatchContext);\n\n  useEffect(() => {\n    if (!currentTodo) {\n      return;\n    }\n\n    getUser(currentTodo.userId).then(userFromServer => {\n      dispatch({ type: 'getUser', payload: userFromServer });\n    });\n  }, [currentTodo, dispatch]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!currentUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                dispatch({ type: 'closedModal' });\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={currentUser?.email}>\n                {currentUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { StateContext } from './management/TodoContextProvider';\n\nexport const App: React.FC = () => {\n  const { isEyeSlash, todos } = useContext(StateContext);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length ? (\n                <Loader />\n              ) : (\n                <TodoList />\n              )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isEyeSlash && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { TodoContextProvider } from './management/TodoContextProvider';\n\nReactDOM.render(\n  <TodoContextProvider>\n    <App />\n  </TodoContextProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}